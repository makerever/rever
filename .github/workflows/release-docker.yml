name: Build and Push Docker Images

# This workflow builds and pushes Docker images based on the configuration from build.yaml.
# It can be triggered either automatically when a new GitHub release is created,
# or manually via the GitHub Actions UI.
# 
# Required GitHub secrets:
# - DOCKERHUB_USERNAME: Your Docker Hub username
# - DOCKERHUB_TOKEN: A Docker Hub access token with push permissions
#
# The workflow will tag images with both 'latest' and the specific version.

on:
  # release:
    # types: [created]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag for the Docker images (e.g., v1.0.0)'
        required: true
        default: 'latest'

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
      with:
        platforms: 'arm64,amd64'

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set version
      id: set_version
      run: |
        if [ "${{ github.event_name }}" = "release" ]; then
          echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        else
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        fi

    - name: Build and push web image
      uses: docker/build-push-action@v4
      id: docker_build_web
      with:
        context: .
        file: ./web/Dockerfile.web
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          reverfin/rever-frontend:latest
          reverfin/rever-frontend:${{ steps.set_version.outputs.VERSION }}
        build-args: |
          NEXT_PUBLIC_API_BASE_URL=/api
        cache-from: type=registry,ref=reverfin/rever-frontend:buildcache
        cache-to: type=registry,ref=reverfin/rever-frontend:buildcache,mode=max

    - name: Build and push API image
      uses: docker/build-push-action@v4
      id: docker_build_api
      with:
        context: ./api
        file: ./api/Dockerfile.api
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          reverfin/rever-api:latest
          reverfin/rever-api:${{ steps.set_version.outputs.VERSION }}
        cache-from: type=registry,ref=reverfin/rever-api:buildcache
        cache-to: type=registry,ref=reverfin/rever-api:buildcache,mode=max

    - name: Build and push proxy image
      uses: docker/build-push-action@v4
      id: docker_build_proxy
      with:
        context: ./nginx
        file: ./nginx/Dockerfile
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          reverfin/rever-proxy:latest
          reverfin/rever-proxy:${{ steps.set_version.outputs.VERSION }}
        cache-from: type=registry,ref=reverfin/rever-proxy:buildcache
        cache-to: type=registry,ref=reverfin/rever-proxy:buildcache,mode=max
          
    - name: Image digest
      run: |
        echo "Web image digest: ${{ steps.docker_build_web.outputs.digest }}"
        echo "API image digest: ${{ steps.docker_build_api.outputs.digest }}"
        echo "Proxy image digest: ${{ steps.docker_build_proxy.outputs.digest }}"
